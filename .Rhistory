dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE, col_types = "_") %>%
str_split(pattern = "", n = 11)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE, col_types = "_")
View(dat)
dat <-
read_fwf(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split(pattern = "", n = 11)
dat <-
read_fwf(here::here("day_03", "trees.txt")) %>%
str_split(pattern = "", n = 11)
dat <-
read_fwf(here::here("day_03", "trees.txt"))
??read_fwf
dat <-
read_fwf(here::here("day_03", "trees.txt"), widths = 1) %>%
str_split(pattern = "", n = 11)
dat <-
read_fwf(here::here("day_03", "trees.txt"), fwf_widths = 1)
dat <-
read_fwf(here::here("day_03", "trees.txt"), fwf_widths 1) %>%
str_split(pattern = "", n = 11)
dat <-
read_fwf(here::here("day_03", "trees.txt"), fwf_widths c(1))
dat <-
read_fwf(here::here("day_03", "trees.txt"), fwf_widths (c(1)))
View(dat)
dat <-
read_fwf(here::here("day_03", "trees.txt"), fwf_widths (c(11)))
View(dat)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_fixed(pattern = "", n = nchar(X1))
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_fixed(pattern = boundary(character), n = 11)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_n(pattern = X1, n = 1)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_n(pattern = X1, n = 1)
library(tidyverse)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_n(pattern = X1, n = 1)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_fixed(pattern = X1, n = 1)
View(dat)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_fixed(pattern = X1, n = 11)
dat <-
read_table(here::here("day_03", "trees.txt"), col_names = FALSE) %>%
str_split_fixed(pattern = "", n = 11)
View(dat)
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"), widths = rep(11,11)))
View(dat)
??read.fwf
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(12, 11)))
12*1
12*11
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(11, 12)))
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(11, 12)),
comment.char = "@")
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(12, 11)),
comment.char = "@")
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(12)),
comment.char = "@")
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(12)),
comment.char = "",
quote = "")
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 12)),
comment.char = "",
quote = "")
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 12),
comment.char = "",
quote = ""))
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 12),
comment.char = "",
quote = ";"))
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 12),
comment.char = ""))
View(dat)
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 11),
comment.char = ""))
View(dat)
library(tidyverse)
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 11),
comment.char = ""))
View(dat)
n <- 3 * ncol(dat)
library(tidyverse)
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 11),
comment.char = ""))
library(tidyverse)
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 11),
comment.char = ""))
n <- 3 * ncol(dat)
map2(bind_cols, replicate(num_right, matrix, simplify = F))
do.call(bind_cols, replicate(num_right, matrix, simplify = F))
expand_matrix <- function(matrix, num_right){
do.call(bind_cols, replicate(num_right, matrix, simplify = F))
}
expand_matrix(dat, 3)
dat_expand <- expand_matrix(dat, 3)
View(dat_expand)
library(tidyverse)
dat <-
as.matrix(read.fwf(here::here("day_03", "trees.txt"),
widths = rep(1, 11),
comment.char = ""))
View(dat)
33/12
num_right = 3
n <- round(num_right * nrows(dat) / ncols(dat), 1)
n <- round(num_right * nrow(dat) / ncol(dat), 1)
expand_matrix <- function(matrix, num_right){
n <- round(num_right * nrow(matrix) / ncol(matrix), 1) # so that the table is large enough to fit all the movement
do.call(bind_cols, replicate(num_right, matrix, simplify = F))
}
d <- expand_matrix(dat, 3)
View(d)
View(d)
expand_matrix <- function(matrix, num_right){
n <- round(num_right * nrow(matrix) / ncol(matrix), 1) # so that the table is large enough to fit all the movement
do.call(cbind, replicate(num_right, matrix, simplify = F))
}
d <- expand_matrix(dat, 3)
View(d)
encounters <- list()
nrow(dat)
structure(list(sequence = c("prot0",  "prot1", "prot2",  "prot3", "prot4",  "prot5"), start = c(282L, 219L, 641L,  355L, 635L, 526L), end = c(325L, 273L, 682L, 370L, 662L, 560L ), length = c(44L, 55L, 42L, 16L, 28L, 35L), AGI = c(1103L, 962L,  869L, 847L, 799L, 736L), AGR = c(25L, 17L, 20L, 52L, 28L, 21L ), epitope = c("SEFKECFKEVNYDMSYFIRTTNPRETKLVQDIWKKZUTKGDWWQL",  "SYAGFEQQRKKFDNPKLKILNVELELKAEKDNPOPRLKDPKQYQSIVDLPOKIIF", "RLEDNPAQWEREKSDEPALLHKELAERRAQQLKJMNRRLANQ",  "AYATLOKIQQWKVRKS", "ASCSVKLGLWKNAPOLQWNALELVPDHP", "KKAERCEDPNAWKGPTNGGPOIUQNAGDGAFYGPK" ), comb_per_epitope = c(30, 41, 28, 2, 14, 21)), .Names = c("sequence",  "start", "end", "length", "AGI", "AGR", "epitope", "comb_per_epitope" ), row.names = c(NA, 6L), class = "data.frame")
d <-structure(list(sequence = c("prot0",  "prot1", "prot2",  "prot3", "prot4",  "prot5"), start = c(282L, 219L, 641L,  355L, 635L, 526L), end = c(325L, 273L, 682L, 370L, 662L, 560L ), length = c(44L, 55L, 42L, 16L, 28L, 35L), AGI = c(1103L, 962L,  869L, 847L, 799L, 736L), AGR = c(25L, 17L, 20L, 52L, 28L, 21L ), epitope = c("SEFKECFKEVNYDMSYFIRTTNPRETKLVQDIWKKZUTKGDWWQL",  "SYAGFEQQRKKFDNPKLKILNVELELKAEKDNPOPRLKDPKQYQSIVDLPOKIIF", "RLEDNPAQWEREKSDEPALLHKELAERRAQQLKJMNRRLANQ",  "AYATLOKIQQWKVRKS", "ASCSVKLGLWKNAPOLQWNALELVPDHP", "KKAERCEDPNAWKGPTNGGPOIUQNAGDGAFYGPK" ), comb_per_epitope = c(30, 41, 28, 2, 14, 21)), .Names = c("sequence",  "start", "end", "length", "AGI", "AGR", "epitope", "comb_per_epitope" ), row.names = c(NA, 6L), class = "data.frame")
d$epitope[1]
trial <- list()
for(j in 1:nrow(tabelao)){
combinations <- c()
for(i in 1:tabelao$comb_per_epitope[j]) {
combinations[i] <- str_sub(string = tabelao$epitope[j],
start = i,end = i+14)
trial[[j]] <- combinations
}
}
tabelao <-structure(list(sequence = c("prot0",  "prot1", "prot2",  "prot3", "prot4",  "prot5"), start = c(282L, 219L, 641L,  355L, 635L, 526L), end = c(325L, 273L, 682L, 370L, 662L, 560L ), length = c(44L, 55L, 42L, 16L, 28L, 35L), AGI = c(1103L, 962L,  869L, 847L, 799L, 736L), AGR = c(25L, 17L, 20L, 52L, 28L, 21L ), epitope = c("SEFKECFKEVNYDMSYFIRTTNPRETKLVQDIWKKZUTKGDWWQL",  "SYAGFEQQRKKFDNPKLKILNVELELKAEKDNPOPRLKDPKQYQSIVDLPOKIIF", "RLEDNPAQWEREKSDEPALLHKELAERRAQQLKJMNRRLANQ",  "AYATLOKIQQWKVRKS", "ASCSVKLGLWKNAPOLQWNALELVPDHP", "KKAERCEDPNAWKGPTNGGPOIUQNAGDGAFYGPK" ), comb_per_epitope = c(30, 41, 28, 2, 14, 21)), .Names = c("sequence",  "start", "end", "length", "AGI", "AGR", "epitope", "comb_per_epitope" ), row.names = c(NA, 6L), class = "data.frame")
trial <- list()
for(j in 1:nrow(tabelao)){
combinations <- c()
for(i in 1:tabelao$comb_per_epitope[j]) {
combinations[i] <- str_sub(string = tabelao$epitope[j],
start = i,end = i+14)
trial[[j]] <- combinations
}
}
View(trial)
encounters <- c()
dat[1]
View(d)
View(dat)
dat[2]
dat[2, 4]
dat[3, 7]
for(i in 1:nrow(matrix)){
encounters[i] <- matrix[i + 1, j + 3]
trial[[j]] <- combinations
}
get_encounters <- function(matrix, num_right){
encounters <- c()
for(i in 1:nrow(matrix)){
pos[[i]] <- matrix[i + 1, j + 3]
}
}
get_encounters(dat, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(i in 1:nrow(matrix)){
encounters[[i]] <- matrix[i + 1, j + 3]
}
}
get_encounters(dat, 3)
c("a", "b")
s <- c("a", "b")
s[[2]]
get_encounters <- function(matrix, num_right){
encounters <- c()
for(i in 1:nrow(matrix)){
pos <- c()
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- combinations
}
}
get_encounters <- function(matrix, num_right){
encounters <- c()
for(i in 1:nrow(matrix)){
pos <- c()
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
get_encounters(dat, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
pos <- c()
for(i in 1:nrow(matrix)){
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat, 3)
View(dat)
expand_matrix <- function(matrix, num_right){
n <- round(num_right * nrow(matrix) / ncol(matrix), 1)
do.call(cbind, replicate(num_right, matrix, simplify = F))
}
dat_expand <- expand_matrix(dat, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
pos <- c()
for(i in 1:nrow(matrix)){
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
pos <- c()
for(i in 1:ncol(matrix)){
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:ncol(matrix)){
pos <- c()
for(i in 1:ncol(matrix)){
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:ncol(matrix)){
pos <- c()
for(i in 1:ncol(matrix)){
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat_expand, 3)
pos <- c()
pos[1] <- matrix(2, 3)
pos
pos[1] <- matrix[2, 3]
pos[1] <- dat[2, 3]
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:ncol(matrix)){
for(i in 1:ncol(matrix)){
encounters[i] <- matrix[i + 1, j + 3]
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:ncol(matrix)){
for(i in 1:ncol(matrix)){
encounters[i] <- matrix[i ++ 1, j ++ 3]
}
}
}
get_encounters(dat_expand, 3)
View(dat_expand)
View(dat_expand)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
for(i in 1:nrow(matrix)){
encounters[i] <- matrix[i + 1, j + 3]
}
}
}
get_encounters(dat_expand, 3)
nrow(dat_expand)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
for(i in 1:nrow(matrix)){
pos[i] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
for(i in 1:nrow(matrix)){
pos[[i]] <- matrix[i + 1, j + 3]
encounters[[j]] <- pos
}
}
}
get_encounters(dat, 3)
pos[1] <- dat[1, 2]
pos[{1}] <- dat[1, 2]
pos[[1]] <- dat[1, 2]
pos
pos[1] <- dat[1, 2]
pos
3 + 3 + 3 + 2
3 +3 + 2
3 + (3*0)
3 + (3*1)
3 + (2*1)
3 + (2*2)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
for(i in 1:nrow(matrix)){
pos[[i]] <- matrix[i + 1, 3 + (j-1)*2]
encounters[[j]] <- pos
}
}
}
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
for(i in 1:nrow(matrix)){
encounters[[i]] <- matrix[i + 1, 3 + (j-1)*2]
}
}
}
get_encounters(dat_expand, 3)
nrow(dat)
dat[11]
dat[12]
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix)){
for(i in 1:nrow(matrix)){
encounters[[i]] <- matrix[3 + (j-1)*2, i + 1]
}
}
}
get_encounters(dat_expand, 3)
3 + (11-1)*2
3+ (3-1)*2
3+ (2-1)*2
View(dat_expand)
dat_expand[1, 2]
dat_expand[2, 1]
dat[1]
dat[12]
View(dat_expand)
dat[12, 1]
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix) - 1){
for(i in 1:nrow(matrix) - 1){
encounters[[i]] <- matrix[i + 1, 3 + (j-1)*2, ]
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix) - 1){
for(i in 1:nrow(matrix) - 1){
encounters[[i]] <- matrix[i + 1, 3 + (j-1)*2]
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix) - 1){
for(i in 1:nrow(matrix) - 1){
encounters[[i]] <- matrix[i, 3 + (j-1)*2]
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- c()
for(j in 1:nrow(matrix) - 1){
for(i in 1:nrow(matrix) - 1){
encounters[i] <- matrix[i, 3 + (j-1)*2]
}
}
}
get_encounters(dat_expand, 3)
get_encounters()
get_encounters(dat_expand, 3)
get_encounters(dat_expand, 3) -> b
b
get_encounters <- function(matrix, num_right){
encounters <- list()
for(j in 1:nrow(matrix) - 1){
pos <- c()
for(i in 1:nrow(matrix) - 1){
encounters[i] <- matrix[i, 3 + (j-1)*2]
}
}
}
get_encounters <- function(matrix, num_right){
encounters <- list()
for(j in 1:nrow(matrix) - 1){
pos <- c()
for(i in 1:nrow(matrix) - 1){
pos[i] <- matrix[i, 3 + (j-1)*2]
encounters[[j]] <- matrix[i, 3 + (j-1)*2]
}
}
}
get_encounters(dat_expand, 3)
for(i in 1:n - 1){
pos[i] <- matrix[i, 3 + (j-1)*2]
encounters[[j]] <- matrix[i, 3 + (j-1)*2]
}
get_encounters <- function(matrix, num_right){
encounters <- list()
n <- nrow(matrix)
for(j in 1:n - 1){
pos <- c()
for(i in 1:n - 1){
pos[i] <- matrix[i, 3 + (j-1)*2]
encounters[[j]] <- matrix[i, 3 + (j-1)*2]
}
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- list()
n <- nrow(matrix)
for(i in 1:n - 1){
pos <- c()
pos[i] <- matrix[i, 3 + (i - 1)*2]
encounters[[i]] <- pos
}
}
get_encounters <- function(matrix, num_right){
encounters <- list()
n <- nrow(matrix)
for(i in 1:n - 1){
pos <- c()
pos[i] <- matrix[i, 3 + (i - 1)*2]
encounters[[i]] <- pos
}
}
get_encounters(dat_expand, 3)
get_encounters <- function(matrix, num_right){
encounters <- list()
n <- nrow(matrix)
for(i in 1:n - 1){
encounters[i] <- matrix[i, 3 + (i - 1)*2]
}
}
get_encounters(dat_expand, 3)
get_encounters(dat_expand, 3) -> b
b
get_encounters <- function(matrix, num_right){
encounters <- list()
n <- nrow(matrix)
for(i in 1:n - 1){
encounters[i] <- matrix[i + 1, 3 + (i - 1)*2]
}
}
get_encounters(dat_expand, 1)
